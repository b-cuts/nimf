# start Nimf

if [ "$IM_CONFIG_PHASE" = 2 ]; then
    nimf-daemon

    if ! test -z `which nimf-indicator`; then
        nimf-indicator
    fi
fi

if [ "$IM_CONFIG_PHASE" = 1 ]; then
# set variables for the plain XIM
XMODIFIERS=@im=nimf

GTK_IM_MODULE=xim
# use immodule only when available for both GTK 2.0 and 3.0
IM_CONFIG_MARKER2=0
for IM_CONFIG_MARKER in /usr/lib/*/gtk-2.0/*/immodules/im-nimf-gtk2.so \
                        /usr/lib/gtk-2.0/*/immodules/im-nimf-gtk2.so ; do
    if [ -e $IM_CONFIG_MARKER ]; then
        IM_CONFIG_MARKER2=1
        break
    fi
done

IM_CONFIG_MARKER3=0
for IM_CONFIG_MARKER in /usr/lib/*/gtk-3.0/*/immodules/im-nimf-gtk3.so \
                        /usr/lib/gtk-3.0/*/immodules/im-nimf-gtk3.so ; do
    if [ -e $IM_CONFIG_MARKER ]; then
        IM_CONFIG_MARKER3=1
        break
    fi
done
if [ $IM_CONFIG_MARKER2 = 1 ] && [ $IM_CONFIG_MARKER3 = 1 ] ; then
    GTK_IM_MODULE=nimf
fi

QT4_IM_MODULE=xim
# use immodule when available for Qt4 (Qt3 has been long dead)
for IM_CONFIG_MARKER in /usr/lib/*/qt4/plugins/inputmethods/libqt4im-nimf.so \
                        /usr/lib/qt4/plugins/inputmethods/libqt4im-nimf.so ; do
    if [ -e $IM_CONFIG_MARKER ]; then
        QT4_IM_MODULE=nimf
        break
    fi
done
QT_IM_MODULE=xim
# use immodule when available for Qt5
for IM_CONFIG_MARKER in /usr/lib/*/qt5/plugins/platforminputcontexts/libqt5im-nimf.so ; do
    if [ -e $IM_CONFIG_MARKER ]; then
        QT_IM_MODULE=nimf
        break
    fi
done

CLUTTER_IM_MODULE=xim
# use immodule when available for clutter
for IM_CONFIG_MARKER in /usr/lib/*/clutter-imcontext/immodules/im-nimf.so \
                        /usr/lib/clutter-imcontext/immodules/im-nimf.so; do
    if [ -e $IM_CONFIG_MARKER ]; then
        CLUTTER_IM_MODULE=nimf
        break
    fi
done
fi
